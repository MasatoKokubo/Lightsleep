= Lightsleep チュートリアル

link:Tutorial.asciidoc[English]

テーブルの行を取得してコンソールに出力する簡単なプログラムを作成してみます。

==== 1. テーブルの準備

DB2, MySQL, Oracle, PostgreSQL, SQLiteまたはSQL ServerのいずれかのデータベースにContactテーブルを作成し、サンプルデータを挿入します。

以下のSQLのいずれかを実行してテーブルを作成します。

[source,sql]
.ddl_db2.sql - DB2
----
CREATE TABLE Contact (
    id        INTEGER        NOT NULL,
    firstName VARGRAPHIC(20) NOT NULL,
    lastName  VARGRAPHIC(20) NOT NULL,
    birthday  DATE               NULL,

    PRIMARY KEY(id)
);
----

[source,sql]
.ddl_mysql.sql - MySQL
----
CREATE TABLE Contact (
    id         INT         NOT NULL,
    firstName  VARCHAR(20) NOT NULL,
    lastName   VARCHAR(20) NOT NULL,
    birthday   DATE            NULL,

    PRIMARY KEY(id)
);
----

[source,sql]
.ddl_oracle.sql - Oracle
----
CREATE TABLE Contact (
    id         NUMBER  ( 9)      NOT NULL,
    firstName  VARCHAR2(20 CHAR) NOT NULL,
    lastName   VARCHAR2(20 CHAR) NOT NULL,
    birthday   DATE                  NULL,

    PRIMARY KEY(id)
);
----

[source,sql]
.ddl_postgresql.sql - PostgreSQL
----
CREATE TABLE Contact (
    id         INT         NOT NULL,
    firstName  VARCHAR(20) NOT NULL,
    lastName   VARCHAR(20) NOT NULL,
    birthday   DATE            NULL,

    PRIMARY KEY(id)
);
----

[source,sql]
.ddl_sqlite.sql - SQLite
----
CREATE TABLE Contact (
    id        INTEGER     NOT NULL,
    firstName VARCHAR(20) NOT NULL,
    lastName  VARCHAR(20) NOT NULL,
    birthday  TEXT            NULL,

    PRIMARY KEY(id)
);
----

[source,sql]
.ddl_sqlserver.sql - SQLServer
----
CREATE TABLE Contact (
    id         INT         NOT NULL,
    firstName  VARCHAR(20) NOT NULL,
    lastName   VARCHAR(20) NOT NULL,
    birthday   DATE            NULL,

    PRIMARY KEY(id)
);
----

以下のSQLを実行してテーブルにデータを挿入します。

[source,sql]
.sample.sql
----
DELETE FROM Contact;
INSERT INTO Contact VALUES (1, 'First' , 'Example', DATE'1991-01-01');
INSERT INTO Contact VALUES (2, 'Second', 'Example', DATE'1992-02-02');
INSERT INTO Contact VALUES (3, 'Third' , 'Example', DATE'1993-03-03');
INSERT INTO Contact VALUES (4, 'Fourth', 'Example', DATE'1994-04-04');
----

==== 2. エンティティ･クラスの作成

Contactテーブルから取得した行を保持するためのエンティティ･クラスを作成します。

[source,java]
.Contact.java
----
package org.lightsleep.tutorial.entity;

import java.sql.Date;

import org.lightsleep.entity.*;

/**
 * Contactエンティティ
 */
public class Contact {
    /** ID */
    @Key
    public int id;

    /** 名前 */
    public String firstName;

    /** 苗字 */
    public String lastName;

    /** 誕生日 */
    public LocalDate birthday;
}
----

==== 3. プロパティ･ファイルの準備

下記の`lightsleep.properties`ファイルを作成しクラス･パスのいずれかにおいてください。`url`, `user`および`password`の値は、使用するデータベース環境に合わせて変更してください。

[source,properties]
.lightsleep.properties - DB2
----
url      = jdbc:db2://<データベース･サーバー>:50000/<データベース>
user     = <ユーザー名>
password = <パスワード>
----

[source,properties]
.lightsleep.properties - MySQL
----
url      = jdbc:mysql://<DB Server>/<データベース>
user     = <ユーザー名>
password = <パスワード>
----

[source,properties]
.lightsleep.properties - Oracle
----
url      = jdbc:oracle:thin:@<DB Server>:1521:<SID>
user     = <ユーザー名>
password = <パスワード>
----

[source,properties]
.lightsleep.properties - PostgreSQL
----
url      = jdbc:postgresql://<DB Server>/<データベース>
user     = <ユーザー名>
password = <パスワード>
----

[source,properties]
.lightsleep.properties - SQLite
----
url = jdbc:sqlite:<インストールしたディレクトリ>/<データベース>
----

[source,properties]
.lightsleep.properties - SQL Server
----
url      = jdbc:sqlserver://<DB Server>;Database=<データベース>
user     = <ユーザー名>
password = <パスワード>
----

==== 4. データの取得
テーブルから全行を取得するプログラムを作成します。

[source,java]
.Example1.java
----
package org.lightsleep.tutorial;

import java.util.ArrayList;
import java.util.List;

import org.lightsleep.Sql;
import org.lightsleep.Transaction;
import org.lightsleep.tutorial.entity.Contact;

public class Example1 {
    public static void main(String[] args) {
        try {
            List<Contact> contacts = new ArrayList<>();
            Transaction.execute(conn -> {
                new Sql<>(Contact.class).connection(conn)
                    .select(contacts::add);
            });

            for (int index = 0; index < contacts.size(); ++index) {
                Contact contact = contacts.get(index);
                System.out.println(
                    index
                    + ": Name: " + contact.firstName + " " + contact.lastName
                    + ", Birthday: " + contact.birthday
                );
            }
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }
}
----

Example1 を実行すると以下がコンソールに表示されます。

[source,log]
.標準出力
----
    ...
    ...
    ...
0: Name: First Example, Birthday: 1991-01-01
1: Name: Second Example, Birthday: 1992-02-02
2: Name: Third Example, Birthday: 1993-03-03
3: Name: Fourth Example, Birthday: 1994-04-04
----

[gray]#_(C) 2016 Masato Kokubo_#
